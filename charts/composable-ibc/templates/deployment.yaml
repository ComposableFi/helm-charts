apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "composable-ibc.fullname" . }}
  labels:
    {{- include "composable-ibc.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "composable-ibc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "composable-ibc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "composable-ibc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-a
          secret:
            secretName: config-a
        - name: config-b
          secret:
            secretName: config-b
        - name: config-core
          configMap:
            name: {{ include "composable-ibc.fullname" . }}-core
            items:
            - key: "config-core.toml"
              path: "config-core.toml"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          volumeMounts:
            - name: config-a
              readOnly: true
              mountPath: "/opt/hyperspace/config-a"
              subPath: config-a
            - name: config-b
              readOnly: true
              mountPath: "/opt/hyperspace/config-b"
              subPath: config-b
            - name: config-core
              readOnly: true
              mountPath: "/opt/hyperspace/config-core"
          # ports:
          #   - name: http
          #     containerPort: 80
          #     protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "ps -A | grep hyperspace"
            initialDelaySeconds: 10
            periodSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
